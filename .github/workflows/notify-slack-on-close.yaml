name: Notify Slack When Issue Closes

on:
  issues:
    types: [closed]

jobs:
  notify:
    if: startsWith(github.event.issue.title, 'AEMY Catalyze -')
    runs-on: ubuntu-latest
    steps:
      - name: Get Slack thread_ts from issue comments
        id: get_thread_ts
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const threadComment = comments.data.reverse().find(c => c.body.startsWith('Slack thread_ts: '));
            if (threadComment) {
              const thread_ts = threadComment.body.replace('Slack thread_ts: ', '').trim();
              core.setOutput('thread_ts', thread_ts);
            }
      - name: Notify Slack that E2E test completed
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text": "*E2E Test Completed* âœ…\nIssue closed: <${{ github.event.issue.html_url }}|${{ github.event.issue.title }}>",
              "thread_ts": "${{ steps.get_thread_ts.outputs.thread_ts }}"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Get information on the parent message
        if: steps.get_thread_ts.outputs.thread_ts != ''
        id: get_parent_message_reactions
        run: |
          response=$(curl -X GET "https://slack.com/api/reactions.get" \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -G \
            --data-urlencode "channel=${{ secrets.SLACK_CHANNEL_ID }}" \
            --data-urlencode "timestamp=${{ steps.get_thread_ts.outputs.thread_ts }}")
          echo "response=$response" >> $GITHUB_OUTPUT
      - name: Determine reaction to add
        if: steps.get_thread_ts.outputs.thread_ts != ''
        id: determine_reaction
        uses: actions/github-script@v7
        with:
          script: |
            // Only add 'passed' reaction if there is no 'x' reaction
            let reaction = '';
            let response = {};

            try {
              response = JSON.parse(`${{ steps.get_parent_message_reactions.outputs.response }}`);
            } catch (err) {
              core.warning(`Failed to parse Slack API response: ${err.message}`);
              reaction = 'question'; // fallback when parsing fails
            }
            if (reaction === '') {
              if (!response.ok) {
                core.warning(`Slack API call failed: ${response.error || 'unknown error'}`);
                reaction = 'question'; 
              } else if (response.message && Array.isArray(response.message.reactions)) {
                const hasXReaction = response.message.reactions.some(r => r.name === 'x');
                if (!hasXReaction) {
                  reaction = 'passed';
                }
              } else if (response.message) {
                // API succeeded but no reactions on message
                reaction = 'passed';
              }
            }
            core.setOutput('reaction', reaction);
      - name: Add emoji reaction to parent message
        if: steps.determine_reaction.outputs.reaction != ''
        run: |
          curl -X POST "https://slack.com/api/reactions.add" \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "name": "${{ steps.determine_reaction.outputs.reaction }}",
              "timestamp": "${{ steps.get_thread_ts.outputs.thread_ts }}"
            }'
